#!/usr/bin/env python
import scComputeMCM, argparse, sys, os
from flipper import flipperDict

if __name__=="__main__":
    """
    @brief generates the mode-coupling matrices per patch and stores them as pickles
    """

    # parse the input arguments
    parser = argparse.ArgumentParser(description="generates the mode-coupling matrices per patch and stores them as pickles")
    parser.add_argument('param_file', type=str, help='the parameter file')
    parser.add_argument('-q', '--quiet', action='store_true', default=False, help='whether to ouput to stdout')

    args = parser.parse_args()

    p = flipperDict.flipperDict()
    p.read_from_file(args.param_file)
    
    # if we want to suppress out, redirect stdout to nothing
    if args.quiet:
        sys.stdout = open(os.devnull, "w")
    
    # compute the mode coupling matrix
    err = scComputeMCM.computeMCM(p)




  

